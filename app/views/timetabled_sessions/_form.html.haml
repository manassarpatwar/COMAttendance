-# frozen_string_literal: true
= simple_form_for(@timetabled_session) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?
 
  .form-inputs
    -#= f.input :session_code
    = f.input :session_title
    = f.input :module_code
    = f.hidden_field :start_time, id: 'start_time'
    = f.hidden_field :end_time, id: 'end_time'
    
    .form-group
      %label{:for => "start_time_picker"}
        Start Time
        %abbr{:title => "required"} *
      %input.form-control{:type => "datetime-local", :value => Time.now.utc.strftime('%Y-%m-%dT%H:%M'), id: 'start_time_picker', class: 'datetimepicker required'}
    
    .form-group
      %label{:for => "end_time_picker"}
        End Time
        %abbr{:title => "required"} *
      %input.form-control{:type => "datetime-local", :value => (Time.now.utc+30.minutes).strftime('%Y-%m-%dT%H:%M'), id: 'end_time_picker', class: 'datetimepicker required'}

    %label Registered Lecturers
    - unless f.object.registrees.empty?
      = f.simple_fields_for :session_registered_lecturers do |lecturer|
        = render 'session_registered_lecturer_fields', f: lecturer
    .links
      = link_to_add_association 'Register lecturer', f, :session_registered_lecturers, class: 'btn btn-outline-primary mb-2'

  #addedLecturers.mb-5.mt-2


  .form-actions
    = f.button :submit, class: "btn btn-primary"

:javascript
  $(document).ready( function() {
    const start = $("#start_time_picker.datetimepicker");
    const end = $("#end_time_picker.datetimepicker");
    
    start.on('change', function(){
      $('#start_time').val(moment(start.val()).utc().format("YYYY-MM-DDTHH:mm"));
    })
    end.on('change', function(){
      $('#end_time').val(moment(end.val()).utc().format("YYYY-MM-DDTHH:mm"));
    })
    
    start.val(moment.utc(start.val()).local().format("YYYY-MM-DDTHH:mm"));
    end.val(moment.utc(end.val()).local().format("YYYY-MM-DDTHH:mm"));
    start.change()
    end.change()
  });